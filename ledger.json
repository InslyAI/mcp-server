{
  "openapi": "3.0.0",
  "info": {
    "title": "Ledger/Sales service",
    "description": "<h3>Authorization</h3>\nTo obtain a token, start by visiting the identifier service and make a request with your username and password.",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/ledger/sales/binders/list": {
      "get": {
        "tags": ["Binder"],
        "summary": "Get list of binder names and id-s",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "filter[product]",
            "in": "query",
            "description": "Filter by product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status][]",
            "in": "query",
            "description": "Filter by binder status",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": ["active"]
          },
          {
            "name": "filter[broker]",
            "in": "query",
            "description": "Filter by broker",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectedBinderId",
            "in": "query",
            "description": "Binder with this id will be added to the response",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "value": {
                        "type": "integer",
                        "example": "1"
                      },
                      "label": {
                        "type": "string",
                        "example": "Test Binder"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/binders": {
      "get": {
        "tags": ["Binder"],
        "summary": "Get list of binders",
        "operationId": "262f769813fb7d7c4f75505382bad540",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "25"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[product]",
            "in": "query",
            "description": "Filter by product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter by binder status",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active"
            }
          },
          {
            "name": "filter[broker]",
            "in": "query",
            "description": "Filter by broker",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_useNewFeature",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binder data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/binderResponse"
                          }
                        },
                        "links": {
                          "properties": {
                            "prev": {
                              "type": "string"
                            },
                            "next": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/binderResponseListObject"
                          }
                        },
                        "links": {
                          "properties": {
                            "prev": {
                              "type": "string"
                            },
                            "next": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Binder"],
        "summary": "Create a new binder",
        "operationId": "f2be696dbd8c793c7bf92b8e097b150d",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "description": "Binder data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/binderObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Binder data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/binderResponseItemObject"
                    },
                    "links": {
                      "$ref": "#/components/schemas/binderLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/binders/groups": {
      "get": {
        "tags": ["Binder"],
        "summary": "Get binder groups list",
        "operationId": "aaa3b1293604009f7fbb878c8f9736c9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Groups list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/binders/{binderId}": {
      "get": {
        "tags": ["Binder"],
        "summary": "Get binder",
        "operationId": "9bb5793e6086afcbc4e8b2a9f8739994",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "binderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binder data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/binderResponseItemObject"
                    },
                    "links": {
                      "$ref": "#/components/schemas/binderLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Binder"],
        "summary": "Update binder",
        "operationId": "3edc38daf821131149408df6223a784e",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "binderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "description": "Binder data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/binderObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Binder data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/binderResponseItemObject"
                    },
                    "links": {
                      "$ref": "#/components/schemas/binderLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/binders/{binderId}/renew": {
      "post": {
        "tags": ["Binder"],
        "summary": "Renew binder",
        "operationId": "502d3a3c16d065105d4ecab960334481",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "binderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Renewal binder data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/binderResponse"
                    },
                    "links": {
                      "$ref": "#/components/schemas/binderLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/dashboards/quotes-in-referral": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Dashboard for quote in referral status",
        "operationId": "quotes-in-referral",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "filters[schema.name]",
            "in": "query",
            "description": "Filter by product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[transaction]",
            "in": "query",
            "description": "Filter by transaction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[referrals.underwriter.sub]",
            "in": "query",
            "description": "Filter by underwriter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[lowest_acceptor]",
            "in": "query",
            "description": "Apply filter by lowest acceptor role",
            "required": false,
            "schema": {
              "type": "bool"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for quotes by value in fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "policyId": {
                        "type": "number",
                        "example": "456"
                      },
                      "product": {
                        "type": "string",
                        "example": "insurer-warranty"
                      },
                      "policyNo": {
                        "type": "number",
                        "example": "123543"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-01-01T12:12:21.000000Z"
                      },
                      "dateInception": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-02-01"
                      },
                      "issuer": {
                        "type": "string",
                        "example": "Test User"
                      },
                      "brokerShortName": {
                        "type": "string",
                        "example": "Test Binder"
                      },
                      "status": {
                        "type": "string",
                        "example": "quote:in-manual-referral"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/dashboards/quotes-renewal": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Dashboard to review quotes that have been created by renewal processes and are not issued yet.",
        "operationId": "quotes-renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "filters[schema.name]",
            "in": "query",
            "description": "Filter by product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[status]",
            "in": "query",
            "description": "Filter by status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[broker.shortName]",
            "in": "query",
            "description": "Filter by broker.shortName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quotes",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "policyId": {
                            "type": "number",
                            "example": "456"
                          },
                          "brokerName": {
                            "type": "string",
                            "example": "some broker"
                          },
                          "brokerShortName": {
                            "type": "string",
                            "example": "some broker shortname"
                          },
                          "product": {
                            "type": "string",
                            "example": "Casco"
                          },
                          "quoteNr": {
                            "type": "string",
                            "example": "123543"
                          },
                          "customerName": {
                            "type": "string",
                            "example": "Mike Smith"
                          },
                          "customerCode": {
                            "type": "string",
                            "example": "ABC123DEF"
                          },
                          "dateInception": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-01-01"
                          },
                          "dateExpiry": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-02-01"
                          },
                          "dateCalculated": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-01-01 12:12:21"
                          },
                          "objects": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "issuer": {
                            "type": "string",
                            "example": "Test User"
                          },
                          "status": {
                            "type": "string",
                            "example": "quote:in-manual-referral"
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "premium": {
                            "type": "float",
                            "example": "110.10"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/dashboards/quotes-renewal/products": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Lists renewable products that are editable by user.",
        "operationId": "9d6e94f031cd20bbee233dae26dc19d2",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Renewable products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "casco"
                      },
                      "title": {
                        "type": "string",
                        "example": "Kasko"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/generated-documents": {
      "post": {
        "tags": ["Quote Documents"],
        "summary": "Generate quote documents",
        "operationId": "b97eedf39187a68012ff22762b679957",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated main document in binary format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/generated-documents/{type}": {
      "post": {
        "tags": ["Quote Documents"],
        "summary": "Generate document by type",
        "operationId": "231ffef38bab03adcb07aaec9edad7cb",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "wording"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated document in binary format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/files": {
      "post": {
        "tags": ["Quote", "Documents"],
        "summary": "Upload files to quote",
        "operationId": "b51a0fac27131b8ee014e2d65028c247",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file[]": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of added documents",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "filename": {
                            "type": "string"
                          },
                          "mime": {
                            "type": "string"
                          },
                          "documentId": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/e-proposal/scheme": {
      "get": {
        "tags": ["E-Proposal"],
        "summary": "Get quote schema for e-proposal view",
        "operationId": "2e4546c687210186f7f763baca5f16d8",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "token",
            "in": "query",
            "description": "e-proposal token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "E-proposal schema",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/e-proposal/scheme/ui": {
      "get": {
        "tags": ["E-Proposal"],
        "summary": "Get quote UI schema for e-proposal view",
        "operationId": "3f3331d29c2f621116ed494ca05fe7df",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "token",
            "in": "query",
            "description": "e-proposal token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "E-proposal UI schema",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{quoteId}/e-proposal": {
      "post": {
        "tags": ["E-Proposal"],
        "summary": "Create e-proposal for quote",
        "operationId": "758f5ee6f9e820a774f056d504b95eec",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "E-proposal created successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/e-proposal": {
      "get": {
        "tags": ["E-Proposal"],
        "summary": "Get quote data for e-proposal view",
        "operationId": "a35d05be4c3f8baecc7477bf65a760cb",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "token",
            "in": "query",
            "description": "e-proposal token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote data for e-proposal view",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["E-Proposal"],
        "summary": "Save e-proposal",
        "operationId": "7741d951af9b49a7a3637be328aca38e",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "token",
            "in": "query",
            "description": "e-proposal token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "E-proposal data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "204": {
            "description": "E-proposal saved successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/endorsements": {
      "get": {
        "tags": ["Endorsements"],
        "summary": "List of endorsements",
        "operationId": "aab167380436d08026b42458b556e3ad",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "filter[product]",
            "in": "query",
            "description": "Filter by product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[group]",
            "in": "query",
            "description": "Filter by group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[is_active]",
            "in": "query",
            "description": "Filter active / not active endorsements",
            "required": false,
            "schema": {
              "type": "bool",
              "example": "true"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by endorsement name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current results page, used for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of result per page, used for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endorsements List",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/endorsement-list-object"
                      }
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "first_page_url": {
                      "type": "string"
                    },
                    "from": {
                      "type": "integer"
                    },
                    "last_page": {
                      "type": "integer"
                    },
                    "last_page_url": {
                      "type": "string"
                    },
                    "next_page_url": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "prev_page_url": {
                      "type": "string"
                    },
                    "to": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Endorsements"],
        "summary": "Create new Endorsement",
        "operationId": "bf70fdda25b8997a31e81d7a1c4db01c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "requestBody": {
          "description": "Endorsement data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/endorsement-view-object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/endorsements/groups/{productName}": {
      "get": {
        "tags": ["Endorsements"],
        "summary": "Get distinct endorsements groups for specified product",
        "operationId": "bfe8130342b12b7f9b19b9a5d2033eb7",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "productName",
            "in": "path",
            "description": "Product Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product ednorsements groups list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/endorsements/{id}": {
      "get": {
        "tags": ["Endorsements"],
        "summary": "Endorsement data",
        "operationId": "d384ed3aa240ef50831fa98fd727aac3",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Endorsement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endorsement data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/endorsement-view-object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Endorsements"],
        "summary": "Update Endorsement",
        "operationId": "c935451598ed5f67c9b056a652b7ec94",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Endorsement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Endorsement data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/endorsement-view-object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Endorsement data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/endorsement-view-object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Endorsements"],
        "summary": "Delete Endorsement",
        "operationId": "a58c4f602cba9e77a7ff0f91f1514840",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Endorsement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/excel-calculator": {
      "post": {
        "tags": ["Excel calculator"],
        "summary": "Upload excel calculator",
        "operationId": "2f74d467c3ae13c9dcc026f32f950925",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns calculator id which can be used in the policy schema",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "calculatorId": {
                      "type": "string",
                      "example": "ledger_9hk6u4hsbvrc2y06"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/sales/calc-api/debug": {
      "post": {
        "tags": ["Excel calculator"],
        "summary": "Debug calculation output",
        "operationId": "127a45eb503f27e794541f1d109be2c2",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calculatorId": {
                    "type": "string",
                    "example": "ledger_tenant_calc123"
                  },
                  "quoteId": {
                    "type": "number",
                    "example": 123
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns calculation result",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/risks/high-risk/get": {
      "post": {
        "tags": ["High-risk"],
        "summary": "Get high risks by data",
        "description": "Get high risks by data",
        "operationId": "get-high-risks",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "description": "param data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "Person/Vehicle/Address/Company"
                    },
                    "code": {
                      "type": "string",
                      "example": "value"
                    },
                    "product": {
                      "type": "string",
                      "example": "from schema name"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data block with active risks",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request.",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "Tenant id is not found in header"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/risks/high-risk/export": {
      "get": {
        "tags": ["High-risk"],
        "summary": "Download high risks exports",
        "operationId": "export-high-risks",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "400": {
            "description": "Incorrect request."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/risks/high-risk/import": {
      "post": {
        "tags": ["High-risk"],
        "summary": "Import high risks",
        "operationId": "import-high-risks",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "description": "Excel file to import",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "properties": {
                  "file": {
                    "description": "Excel file to import",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import result",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "stats": {
                      "properties": {
                        "state": {
                          "description": "Current global status of the import",
                          "type": "string",
                          "enum": ["processing", "failed", "done"]
                        },
                        "user_id": {
                          "description": "Who initiated the import",
                          "type": "integer"
                        },
                        "created_at": {
                          "description": "When did the import start",
                          "type": "string",
                          "format": "date-time"
                        },
                        "started_at": {
                          "description": "When did the import start",
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "description": "When was the last status update",
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "description": "Human readable status of current import progress",
                          "type": "string",
                          "format": "date-time",
                          "example": "Import in progress"
                        },
                        "processed": {
                          "description": "How many rows were processed?",
                          "type": "integer"
                        },
                        "inserted": {
                          "description": "How may rows were added?",
                          "type": "integer"
                        },
                        "updated": {
                          "description": "How many rows were updated?",
                          "type": "integer"
                        },
                        "failed": {
                          "description": "How many rows failed to import?",
                          "type": "integer"
                        },
                        "errors": {
                          "description": "Array of error messages about failures",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/risks/high-risk/import/log": {
      "get": {
        "tags": ["High-risk"],
        "summary": "Log of high risk import, currently reporting only the latest import status",
        "operationId": "import-high-risks-log",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Import result",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier for the import",
                          "type": "integer",
                          "example": "1"
                        },
                        "user_id": {
                          "description": "Who initiated the import",
                          "type": "integer",
                          "example": "1"
                        },
                        "created_at": {
                          "description": "When did the import start",
                          "type": "string",
                          "format": "date-time"
                        },
                        "started_at": {
                          "description": "When did the import start",
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "description": "When was the last status update",
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "description": "Human readable status of current import progress",
                          "type": "string",
                          "format": "date-time",
                          "example": "Import in progress"
                        },
                        "details": {
                          "properties": {
                            "xlsFileName": {
                              "description": "Imported file name",
                              "type": "string",
                              "example": "high-risks.xlsx"
                            },
                            "imported": {
                              "description": "How many rows were written (inserted or updated)?",
                              "type": "integer"
                            },
                            "actionsCount": {
                              "properties": {
                                "processed": {
                                  "description": "How many rows were processed?",
                                  "type": "integer"
                                },
                                "inserted": {
                                  "description": "How may rows were added?",
                                  "type": "integer"
                                },
                                "updated": {
                                  "description": "How many rows were updated?",
                                  "type": "integer"
                                },
                                "failed": {
                                  "description": "How many rows failed to import?",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "failed": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "Row identifier (type + code)",
                                    "type": "string",
                                    "example": "Company 12345678"
                                  },
                                  "errors": {
                                    "type": "string",
                                    "example": "The start_date is not a valid date."
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "Fail"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/packages/aggregated-calculation": {
      "get": {
        "tags": ["Quote Packages"],
        "summary": "Get aggregated calculation",
        "description": "Get aggregated calculation",
        "operationId": "46742547513bcaba006526d488642d02",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated calculation data",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Success response aggregated-calculation": {
                    "summary": "Aggregated calculation data",
                    "value": [
                      {
                        "packageBlock": "packages",
                        "chosenPackage": "Super",
                        "dimension": {
                          "schedules.payMonthFrequency": 1
                        },
                        "optionalRisks": [],
                        "premiums": [
                          {
                            "package": "Super",
                            "periodPremium": 3.96,
                            "installmentPremium": 0.33,
                            "currency": "EUR"
                          },
                          {
                            "package": "Mega",
                            "periodPremium": 3.48,
                            "installmentPremium": 0.29,
                            "currency": "EUR"
                          },
                          {
                            "package": "Roheline",
                            "periodPremium": 3.48,
                            "installmentPremium": 0.29,
                            "currency": "EUR"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/packages/set": {
      "post": {
        "tags": ["Quote Packages"],
        "summary": "Set package",
        "description": "Set cover package",
        "operationId": "60124c99f65dfb17e4b0d3ba994f62b7",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quote id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "properties": {
                    "package": {
                      "type": "string",
                      "example": "name of package"
                    },
                    "packageBlock": {
                      "type": "string",
                      "example": "packageBlock of package"
                    },
                    "optionalRisks": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "type": "object"
                }
              },
              "examples": {
                "Set package Roheline": {
                  "summary": "Set package Roheline",
                  "value": [
                    {
                      "package": "Roheline",
                      "packageBlock": "packages"
                    }
                  ]
                },
                "Set package Roheline with optional risks": {
                  "summary": "Set package Roheline with optional risks",
                  "value": [
                    {
                      "package": "Roheline",
                      "optionalRisks": [
                        "cascoBaggage",
                        "cascoPassengerAccident"
                      ],
                      "packageBlock": "packages"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "empty response"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}": {
      "get": {
        "tags": ["Quote"],
        "summary": "Get quote data",
        "description": "",
        "operationId": "get-quote-data",
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "withNotifications",
            "in": "query",
            "description": "Forced Required to use in documentation, to get additional data about quote status: meta block from example with warnings, errors. Plan to make it as default behaviour.",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data block response structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "meta": {
                      "allOf": [
                        {
                          "required": ["schemaPath"],
                          "properties": {
                            "schemaPath": {
                              "description": "Path to json scheme used for validation. Sometimes required fields are removed based on business logic.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "$ref": "#/components/schemas/metaError"
                        },
                        {
                          "$ref": "#/components/schemas/metaWarning"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [],
                  "meta": {
                    "schemaPath": "policy/regular/casco/1",
                    "warnings": [
                      {
                        "code": "excel-calculator",
                        "status": 422,
                        "title": "Could not get prices for the object, please fill in all the required fields"
                      },
                      {
                        "code": "make-model",
                        "title": "Not able to match make and model"
                      }
                    ],
                    "errors": [
                      {
                        "code": "excel-calculator",
                        "title": "Could not connect to excel calculator service"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request.",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "Tenant id is not found in header"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/links": {
      "get": {
        "tags": ["Quote"],
        "summary": "Get quote data",
        "description": "Not found it used in logdna production. Will be removed within next release, after 2022-05-19",
        "operationId": "d0c00f56a0f525b630e94bde61c9e5ce",
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "Get quote data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/policy-root"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/": {
      "put": {
        "tags": ["Quote"],
        "summary": "Update quote",
        "operationId": "update-quote-data",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-update"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/calculate": {
      "post": {
        "tags": ["Quote Calculation"],
        "summary": "Calculate quote",
        "description": "Calculate quote",
        "operationId": "quote-update-and-calculate",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quote id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "withNotifications",
            "in": "query",
            "description": "Forced Required to use in documentation, to get additional data about quote status: meta block from example with warnings, errors. Plan to make it as default behaviour.",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": "true"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema"
        },
        "responses": {
          "200": {
            "description": "Full structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "example": ["See response description for more details."]
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/calculate-debug": {
      "post": {
        "tags": ["Quote Calculation"],
        "summary": "Debug quote calculation",
        "description": "Returns zip archive with excel calculator files filled with data for each object.",
        "operationId": "calculate-debug",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quote id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archive with excel calculator files.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/actions/{id}": {
      "get": {
        "tags": ["Quote"],
        "summary": "Get available actions",
        "description": "Get available actions. This route has to be called after each change quote data to get to know that action is done",
        "operationId": "get-quote-actions",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of quote",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "longPolling",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "false",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource unlocked. No background logic running. List of allowed actions for the quote.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "links": {
                      "$ref": "#/components/schemas/quoteLinks"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    "quote:download",
                    "quote:update",
                    "quote:copy",
                    "quote:calculate",
                    "quote:issue"
                  ],
                  "meta": [],
                  "links": {
                    "quote:changes": "https://app.beta.insly.training/api/v1/ledger/sales/policies/1/changes"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource is locked. Not allowed to do any write operations.<br/>\n     *          Background logic is running, need to repeat the call until `200` status returned.<br/>\n     *          By default, in case unexpected error happened, after 60s it will be unlocked - `200` status returned."
          },
          "423": {
            "description": "Resource is locked (with `longPolling=true`)"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/create": {
      "post": {
        "tags": ["Quote"],
        "summary": "Create a new quote",
        "description": "Create a new quote by schema, you can get schema in Schemes section",
        "operationId": "quote-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-quote-create"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/quotes/{schema}": {
      "post": {
        "tags": ["Quote"],
        "summary": "Create a new quote",
        "description": "Create a new quote by schema",
        "operationId": "quote-product-create",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-quote-create"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "409": {
            "description": "Schemas in the payload is different from schema in the path"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/quotes/{schema}/from-file": {
      "post": {
        "tags": ["Quote"],
        "summary": "Create a new quote from uploaded document",
        "description": "Create a new quote by schema from uploaded document",
        "operationId": "quote-product-create-from-document",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Quote create request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "64ff614a-551f-4b38-a7ba-37b7285c9562"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "links": {
              "waitActions": {
                "$ref": "#/components/links/get-quote-issue-status"
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/mta": {
      "post": {
        "tags": ["Policy"],
        "summary": "Change policy",
        "operationId": "policy-mta",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema"
        },
        "responses": {
          "200": {
            "description": "Creates policy mta",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy-root"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/copy": {
      "post": {
        "tags": ["Quote"],
        "summary": "Create a copy of quote",
        "description": "Create a copy of quote. Only non-MTA quotes can be copied",
        "operationId": "quote-copy",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "requestBody": {
          "description": "Copy ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "policy.id": {
                    "type": "number",
                    "example": "Quote id to copy"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/bind": {
      "post": {
        "tags": ["Quote"],
        "summary": "Bind policy draft",
        "operationId": "quote-bind",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema"
        },
        "responses": {
          "204": {
            "description": "Quote bound / locked"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{quoteId}/unbind": {
      "post": {
        "tags": ["Quote"],
        "summary": "Unbind quote",
        "operationId": "quote-unbind",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Quote unbound / unlocked"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/decline": {
      "post": {
        "tags": ["Quote"],
        "summary": "Decline policy draft",
        "operationId": "quote-decline",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Binder data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "Reason for declining"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Quote declined"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/request-information-by-email": {
      "post": {
        "tags": ["Quote"],
        "summary": "Request additional information for quite by email",
        "operationId": "request-information-by-email",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "Your policy information is incomplete"
                  },
                  "body": {
                    "type": "string",
                    "example": "To finilize the policy, please provide additional information"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request sent"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/send-email": {
      "post": {
        "tags": ["Quote"],
        "summary": "Send quote email",
        "operationId": "f6180d95cffc29075d7124c2a5999e24",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request sent"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/getCustomer": {
      "get": {
        "tags": ["Quote"],
        "summary": "Get customer id",
        "description": "",
        "operationId": "get-customer-id",
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/quotes/{schema}/{id}": {
      "put": {
        "tags": ["Quote"],
        "summary": "Update a quote",
        "description": "Update a quote",
        "operationId": "quote-product-update",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-update"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/quotes/{schema}/{id}/calculate": {
      "post": {
        "tags": ["Quote Calculation"],
        "summary": "Calculate quote",
        "description": "Calculate quote by schema",
        "operationId": "quote-product-calculate",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-update"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/external/{product}": {
      "post": {
        "tags": ["Quote"],
        "summary": "Create quote from custom payload",
        "operationId": "quote-create-external",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "insured-property"
            }
          }
        ],
        "requestBody": {
          "description": "API service specific JSON data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Quote created"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/responses/product-json-schema-structure"
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Invalid configuration"
                      },
                      "error": {
                        "type": "string",
                        "example": "Quote creating failed"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "423": {
            "description": "Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Quote creation took more time than expected and will continue in background."
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/calculation": {
      "get": {
        "tags": ["Quote Calculation"],
        "summary": "Get quote financials",
        "description": "Get quote financials by quote id",
        "operationId": "26d82bece250b471e5bbdff7e4992fa0",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of quote",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote financials",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "periodPremium": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "type": "object"
                    },
                    "fields": {
                      "description": "Array of fields to show in UI",
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "periodPremium"
                          },
                          "title": {
                            "type": "string",
                            "example": "Premium"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "installments": {
                      "description": "Optional array of installments entries to be created when quote is issued",
                      "type": "array",
                      "items": {
                        "description": "Installment entry",
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/calculation": {
      "post": {
        "tags": ["Quote Calculation"],
        "summary": "Get quote financials",
        "description": "Get quote financials by payload",
        "operationId": "6da3e43e005c3065abb48ea2c1b32449",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema"
        },
        "responses": {
          "200": {
            "description": "Quote financials",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "periodPremium": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/installments-schedule": {
      "get": {
        "tags": ["Quote"],
        "summary": "Get quote installments schedule",
        "operationId": "quote-get-installments-schedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "instalments": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "dueDate": {
                            "type": "date",
                            "example": "2024-01-01"
                          },
                          "premium": {
                            "type": "number",
                            "example": "1234.56"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/product-features/{schemaName}": {
      "get": {
        "tags": ["Product features"],
        "summary": "Get product features configuration",
        "operationId": "9661c0d286640f5d0e8ec3ba28ba55a4",
        "parameters": [
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Features configuration",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Product features"],
        "summary": "Update features with configurations for product",
        "operationId": "fc132b4eecedcd9d68fed61d2c7aaace",
        "parameters": [
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Features configuration",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Product features"],
        "summary": "Set features with configurations for product",
        "operationId": "f9aeb0f14bba75534369428577a2b4a0",
        "parameters": [
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Features configuration",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/features-configuration/product-features/{schemaName}": {
      "get": {
        "tags": ["Product features"],
        "summary": "Get product features list",
        "parameters": [
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Features configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/featureListItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/product-features/{schemaName}/{feature}": {
      "get": {
        "tags": ["Product features"],
        "summary": "Get product feature configuration",
        "operationId": "c1d7c152ecae059e298f8430c9c45808",
        "parameters": [
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "feature",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Feature configuration",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/changes": {
      "get": {
        "tags": ["Quote"],
        "summary": "Get quote changes in comparison with previous quote version.",
        "description": "If current quote is in manual referral and it was underwitten before, then endpoint<br/>\n     *     provides changes between previous approved quote version and current quote data. <br/>\n     *     If quote is MTA and waiting for underwiting process (in manual referral status), then then endpoint<br/>\n     *     provides changes between issues policy data and current quote data.",
        "operationId": "0ec423c7c3fd1fbb056565d0f3e23e70",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Quote id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote changes",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/quoteChangesList"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "404": {
            "description": "Can\\'t find previous version quote"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/import-data": {
      "post": {
        "tags": ["Quote"],
        "summary": "Import quote data from excel file",
        "operationId": "import-quote-data",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "403": {
            "description": "Incorrect request.",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "Feature is not enabled for this product"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "message": "The given data was invalid.",
                  "errors": {
                    "sheet:A1": ["Can not format value 'foo' as number."]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/events": {
      "get": {
        "tags": ["Quote"],
        "summary": "Quote history in events",
        "operationId": "e2c1206f5a2ff77505c29a1128e6a3cb",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "25"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return paginated list of quote events",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/quote-event"
                      }
                    },
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string",
                          "nullable": true
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/events/{eventId}": {
      "get": {
        "tags": ["Quote"],
        "summary": "Quote event",
        "operationId": "45e333e5d9dc3fcc40dd029c99dbe983",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return payload of quote event for downloading",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/referrals": {
      "post": {
        "tags": ["Referrals"],
        "summary": "Send quote to referral",
        "description": "It's async request, UI sends \"actions\" endpoint and waits until lock is released",
        "operationId": "6005e4acad355145b0d940e1604b11c1",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Send quote to referral comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Reason of sending quote to referral"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Quote has been sent to referral"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/referrals/accept": {
      "post": {
        "tags": ["Referrals"],
        "summary": "Accept referral",
        "description": "It's async request, UI sends \"actions\" endpoint and waits until lock is released",
        "operationId": "e677a1fbb4126a5a54e6656a63600a82",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Accept referral comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Referral is accepted after quote data check"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Referral accepted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{policyId}/referrals/decline": {
      "post": {
        "tags": ["Referrals"],
        "summary": "Decline referral",
        "description": "It's async request, UI sends \"actions\" endpoint and waits until lock is released",
        "operationId": "b800ca67c23e5cb4d22b08c46af70ba2",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Decline referral comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Referral is declined after quote data check"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Referral declined"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/reports/broker-sales": {
      "get": {
        "tags": ["Sales broker hub"],
        "summary": "Return quote creation and binding information for period",
        "operationId": "ff4fa77b45ee5f27d7c3ad89c3234f42",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "groupByMonth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return quote bind data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/reports-broker-quote-sales"
                    },
                    {
                      "$ref": "#/components/schemas/reports-broker-quote-sales-by-month"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/validate/issue": {
      "post": {
        "tags": ["Policy"],
        "summary": "Validate policy data before issuing",
        "operationId": "b827c91bc71c6e8169291b900712f227",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-quote-create"
        },
        "responses": {
          "200": {
            "description": "Validated policy data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy-root"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/policies/{id}/issue": {
      "post": {
        "tags": ["Quote"],
        "summary": "Issue quote",
        "description": "Issue quote, after got success please check process status by /api/v1/ledger/requests/{requestId} you can find it in this doc",
        "operationId": "21683e487640fdf646b02e9600f312a9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of quote",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-issue"
        },
        "responses": {
          "202": {
            "description": "Issue request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "64ff614a-551f-4b38-a7ba-37b7285c9562"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "links": {
              "waitActions": {
                "$ref": "#/components/links/get-quote-issue-status"
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/quotes/{schema}/{id}/issue": {
      "post": {
        "tags": ["Quote"],
        "summary": "Issue quote",
        "description": "Issue quote, after got success please check process status by /api/v1/ledger/requests/{requestId} you can find it in this doc",
        "operationId": "b1a224d16c1445a5c464509f22542ecc",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product-json-schema-update"
        },
        "responses": {
          "202": {
            "description": "Issue request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "64ff614a-551f-4b38-a7ba-37b7285c9562"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "links": {
              "waitActions": {
                "$ref": "#/components/links/get-quote-issue-status"
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/feature/{name}/scheme": {
      "get": {
        "tags": ["Product features"],
        "summary": "Get feature schema",
        "operationId": "get-feature-schema",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Feature name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feature schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/feature/{name}/ui": {
      "get": {
        "tags": ["Product features"],
        "summary": "Get feature UI schema",
        "operationId": "get-feature-ui-schema",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Feature name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feature UI schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/ireland-address-lookup/autocomplete": {
      "get": {
        "tags": ["Ireland Address Lookup"],
        "summary": "Ireland address lookup: Get list of autocompleted addresses with unique ids.",
        "operationId": "40856d5c3684394bda9d2ee34f8066ac",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Address search string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of autocompleted addresses with unique ids",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/autocompletedIrelandAddress"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/ireland-address-lookup/get-info": {
      "get": {
        "tags": ["Ireland Address Lookup"],
        "summary": "Ireland address lookup: Get specific address detailed information.",
        "operationId": "33f976ee013491a5bef89dd35ec99b46",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "Ireland address unique ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fullIrelandAddress"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/features-configuration/tenant-features": {
      "get": {
        "tags": ["Tenant features"],
        "summary": "Get tenant features list",
        "operationId": "19cce1f40f3ca0dc79fb2e9fb6790ea1",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Features configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/featureListItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Tenant features"],
        "summary": "Update tenant features",
        "operationId": "60809bc98f288d743131f7a28ed6dd76",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Features updated successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/sales/features-configuration/tenant-features/{feature}": {
      "get": {
        "tags": ["Tenant features"],
        "summary": "Get tenant feature configuration",
        "operationId": "a734225e9c4828b98a88d99306282848",
        "parameters": [
          {
            "name": "feature",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Feature configuration",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/policies": {
      "get": {
        "tags": ["Customer by identity feature"],
        "summary": "Get customer policies. Query params must match tenant feature customer_identity (it may differ for another tenant)",
        "operationId": "fc95d99f9e7ebc267ebf7f4ccd3f44d5",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentCountry",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "usePagination",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "false",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of customer policies",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {}
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/policies/{policyId}/links": {
      "get": {
        "tags": ["Customer by identity feature"],
        "summary": "Get customer policy links. Query params must match tenant feature customer_identity",
        "operationId": "e9d959e2336c7c513013d17046b42fcf",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentCountry",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer policy links",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    },
                    "links": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/policies/{policyId}/custom-view/installments": {
      "get": {
        "tags": ["Customer by identity feature"],
        "summary": "Get customer policy custom view installments. Query params must match tenant feature customer_identity",
        "operationId": "11328c27e32781fd405aad3f70ee7a57",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentCountry",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom view installments",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/documents/{documentId}": {
      "get": {
        "tags": ["Customer by identity feature"],
        "summary": "Get customer document. Query params must match tenant feature customer_identity",
        "operationId": "ea195105be42e48ec57b21daba862f54",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentCountry",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document binary data"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/show": {
      "get": {
        "tags": ["Customer by identity feature"],
        "summary": "Get customer. Query params must match tenant feature customer_identity",
        "operationId": "f0ee6626f6f3b6e700cd278d29db2339",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentCountry",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/broker-payments/bdx": {
      "post": {
        "tags": ["Brokerpayments"],
        "summary": "Bdx report creation event",
        "operationId": "fc1148adca0aa691a0ab0d4fa04265a2",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "insurer",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "event id",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/broker-payments/bdx/{eventId}": {
      "get": {
        "tags": ["Brokerpayments"],
        "summary": "Insurer payment report generation",
        "operationId": "297d8b9327d145356b14791c49a822ca",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "insurer payments report data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/insurer-payments-report"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokers/short-names": {
      "get": {
        "tags": ["Brokers"],
        "summary": "Get list of broker names",
        "operationId": "0e5973ffac03371f9cfb4f1c881ea3c3",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Get brokers, which have active commissions for product(s)",
            "required": false,
            "schema": {
              "type": "bool",
              "example": "true"
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Get brokers, which have commissions for specified product",
            "required": false,
            "schema": {
              "type": "string",
              "example": "unoccupied"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of broker names / shortnames",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Unoccupied Broker LTD"
                          },
                          "shortName": {
                            "type": "string",
                            "example": "Unoccupied Broker"
                          },
                          "phone": {
                            "type": "string",
                            "example": "1234567890"
                          },
                          "email": {
                            "type": "string",
                            "example": "email@example.com"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokers/merge/{broker}/policies-count": {
      "get": {
        "tags": ["Brokers"],
        "summary": "Get total policies count to be merged",
        "operationId": "14aae70cbdf8e101828ab6a0b901da9c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "broker",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Policies to merge total count",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "policiesToMergeTotal": {
                      "type": "integer",
                      "example": 100
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokers/merge": {
      "post": {
        "tags": ["Brokers"],
        "summary": "Merge brokers",
        "operationId": "a6434a8cf07d699cafc04ada28e81c9c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["acquiringBroker", "acquiredBroker"],
                "properties": {
                  "acquiringBroker": {
                    "type": "string",
                    "example": "newBroker"
                  },
                  "acquiredBroker": {
                    "type": "string",
                    "example": "oldBroker"
                  },
                  "policyId": {
                    "type": "integer",
                    "example": null,
                    "nullable": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request accepted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "64ff614a-551f-4b38-a7ba-37b7285c9562"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/chat/settings": {
      "get": {
        "tags": ["Chat"],
        "summary": "Get chat settings",
        "operationId": "9ed4bce1c3c42e7bc0d80bd1a18ee6d8",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "type": {
                      "type": "string",
                      "example": "chat-type"
                    },
                    "settings": {
                      "properties": {
                        "alignment": {
                          "type": "string",
                          "example": "right"
                        },
                        "vertical_padding": {
                          "type": "int",
                          "example": "20"
                        },
                        "horizontal_padding": {
                          "type": "int",
                          "example": "20"
                        }
                      },
                      "type": "object"
                    },
                    "config": {
                      "properties": {
                        "app_id": {
                          "type": "string",
                          "example": "asdzxc12"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/{customerId}/notes": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get customer notes",
        "operationId": "4bdc07ade18610f7a654d791a7a262f2",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "677"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer notes",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/customerNote"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Customers"],
        "summary": "Add customer note",
        "operationId": "41d6b039bc99441548bb24740183a2b5",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "677"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/{customerId}/notes/{id}": {
      "delete": {
        "tags": ["Customers"],
        "summary": "Delete customer note",
        "operationId": "1c66501ceb8b37001ccfb85fc7a9051f",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "677"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "501"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get customers",
        "operationId": "5f8d1e23e061e1fd84060a472de89335",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Customers"],
        "summary": "Create new customer",
        "operationId": "30944311b60c16c56c6945faffe857a9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "200": {
            "description": "Created customer",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/{customerId}": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get customer",
        "operationId": "deb6adf55786704aa0ab27f9f01ceb2d",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Customers"],
        "summary": "Update customer",
        "operationId": "11b6165af2b171e80bf78bf95485059b",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated customer",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/{customerId}/totals": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get customer totals",
        "operationId": "31ab9b898b844dd732eb9f22f7681f9c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer totals",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "overduePayment": {
                          "type": "number",
                          "example": "22.24"
                        },
                        "policiesPremium": {
                          "type": "number",
                          "example": "12.60"
                        },
                        "policiesCount": {
                          "type": "integer",
                          "example": "5"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/{customerId}/profile": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get customer profile",
        "operationId": "05ea063970f757d72216bdeae1695512",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer profile info",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "isActive": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "profileLevel": {
                          "type": "integer",
                          "example": "1"
                        },
                        "loyalty": {
                          "type": "string",
                          "example": "5.10"
                        },
                        "insurancePaymentsSum": {
                          "type": "number",
                          "example": "112.55"
                        },
                        "activePoliciesCount": {
                          "type": "integer",
                          "example": "11"
                        },
                        "activePoliciesByProduct": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "product": {
                                "type": "string",
                                "example": "mtpl"
                              },
                              "count": {
                                "type": "integer",
                                "example": "3"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/customers/{customerId}/history": {
      "get": {
        "tags": ["Policy"],
        "summary": "Customer history in events",
        "operationId": "df9e757663c8857cd8dc9aad13bddee7",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "25"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return paginated list of customer events",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/customer-event"
                      }
                    },
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string",
                          "nullable": true
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/dashboards/policies-renewal": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Dashboard to review policies that are eligible for renewal and doesn\u2019t have renewed policy issued",
        "operationId": "policies-renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "filters[schema.name]",
            "in": "query",
            "description": "Filter by product",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[broker.shortName]",
            "in": "query",
            "description": "Filter by broker",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[daysBeforeExpiry]",
            "in": "query",
            "description": "Filter by days before expiry date",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of policies",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "policy_id": {
                            "type": "number",
                            "example": "456"
                          },
                          "issuer": {
                            "type": "string",
                            "example": "Test User"
                          },
                          "brokerName": {
                            "type": "string",
                            "example": "some broker"
                          },
                          "brokerShortName": {
                            "type": "string",
                            "example": "some broker shortname"
                          },
                          "policyNo": {
                            "type": "string",
                            "example": "123543"
                          },
                          "dateIssued": {
                            "type": "date",
                            "format": "date",
                            "example": "2022-01-01"
                          },
                          "dateExpiry": {
                            "type": "date",
                            "format": "date",
                            "example": "2022-01-01"
                          },
                          "dateInception": {
                            "type": "date",
                            "format": "date",
                            "example": "2022-01-01"
                          },
                          "premium": {
                            "type": "float",
                            "example": "110.10"
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "customerName": {
                            "type": "string",
                            "example": "Mike Smith"
                          },
                          "status": {
                            "type": "string",
                            "example": "policy_issued"
                          },
                          "objects": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "customerCode": {
                            "type": "string",
                            "example": "ABC123DEF"
                          },
                          "product": {
                            "type": "string",
                            "example": "Casco"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/dashboards/policies-renewal/products": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Lists renewable products that are editable by user.",
        "operationId": "663ecc6eb889c31eacf1b9af66b3b037",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Renewable products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "casco"
                      },
                      "title": {
                        "type": "string",
                        "example": "Kasko"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/documents/{id}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Download document content",
        "operationId": "0475ff44ecad461660f9acbaf7804a65",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document content"
          }
        }
      }
    },
    "/api/v1/ledger/policies/broker-events": {
      "get": {
        "tags": ["Policy"],
        "summary": "Policies events list for defined broker",
        "operationId": "519573f4be7e20160c32706ed52f2f59",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "broker",
            "in": "query",
            "description": "Broker short name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Test Test"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2023-11-16T00:00:00+02:00"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2023-11-16T23:59:59+02:00"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Event tag",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "policy_issued",
                "policy_changed",
                "policy_terminated",
                "policy_termination_reverted"
              ]
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Schema name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "casco"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "500"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return paginated list of policies events",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "eventId": {
                            "type": "integer",
                            "example": "207962"
                          },
                          "eventTag": {
                            "type": "string",
                            "example": "policy_issued"
                          },
                          "entryDate": {
                            "description": "Event creation time in tenant local timezone",
                            "type": "string",
                            "example": "2023-11-16 10:55:12"
                          },
                          "policyId": {
                            "type": "integer",
                            "example": "50011"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string",
                          "nullable": true
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/brokers": {
      "get": {
        "tags": ["Consolidated Invoices"],
        "summary": "Get list of brokers that have invoice consolidation enabled",
        "operationId": "aa170845b315bcb7facec5289c315335",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Broker short names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "broker1"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices": {
      "get": {
        "tags": ["Consolidated Invoices"],
        "summary": "Get list of consolidated invoices",
        "operationId": "ffaa3cc8b0e813399f2845d6eaace2d9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[status]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[isRegularInvoice]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[invoiceNo]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[brokerShortName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consolidated invoices",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/consolidatedInvoiceListResource"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Consolidated Invoices"],
        "summary": "Create consolidated invoice",
        "operationId": "0ba86444f83d4aaecfd489663c7b42f1",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/consolidatedInvoiceResource"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Async request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "2d195c8a-7553-4fa2-82d8-0a9aa446c584"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}": {
      "get": {
        "tags": ["Consolidated Invoices"],
        "summary": "Get consolidated invoice data",
        "operationId": "20505c076cb082b445afb46eed5fa176",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consolidated invoice data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/consolidatedInvoiceResource"
                    },
                    "links": {
                      "$ref": "#/components/schemas/consolidatedInvoiceResourceLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Consolidated Invoices"],
        "summary": "Delete draft consolidated invoice",
        "operationId": "12e3f5936a7d6ee754daef6014f716fb",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Async request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "2d195c8a-7553-4fa2-82d8-0a9aa446c584"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}/invoices": {
      "get": {
        "tags": ["Consolidated Invoices"],
        "summary": "Get list of invoices added to consolidated invoice",
        "operationId": "83daf01f81ee3c05f73ed59b69d44769",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/consolidatedInvoiceInvoiceResponseListObject"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}/available-invoices": {
      "get": {
        "tags": ["Consolidated Invoices"],
        "summary": "Get list of invoices that can be consolidated",
        "operationId": "56d1751bc9423d80b73632e453dd2f16",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/consolidatedInvoiceInvoiceResponseListObject"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "No content for consolidated invoice in non-draft status"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}/invoices/{invoiceNo}": {
      "post": {
        "tags": ["Consolidated Invoices"],
        "summary": "Add invoice to consolidated invoice",
        "operationId": "1669016bc8de9bf55ac533cdf2194063",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invoiceNo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consolidated invoice data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/consolidatedInvoiceResource"
                    },
                    "links": {
                      "$ref": "#/components/schemas/consolidatedInvoiceResourceLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Consolidated Invoices"],
        "summary": "Remove invoice from consolidated invoice",
        "operationId": "ccf70396862a291107e473ca48262cff",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invoiceNo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consolidated invoice data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/consolidatedInvoiceResource"
                    },
                    "links": {
                      "$ref": "#/components/schemas/consolidatedInvoiceResourceLinks"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}/issue": {
      "post": {
        "tags": ["Consolidated Invoices"],
        "summary": "Issue consolidated invoice",
        "operationId": "1ba45b640da295db7782f486fce32d41",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Async request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "2d195c8a-7553-4fa2-82d8-0a9aa446c584"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}/documents": {
      "get": {
        "tags": ["Consolidated Invoices"],
        "summary": "Get consolidated invoice documents",
        "operationId": "90ac5ad2333c90eaf6eadae9545837f8",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documents list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/documentResource"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/consolidated-invoices/{id}/credit": {
      "post": {
        "tags": ["Consolidated Invoices"],
        "summary": "Credit invoices from issued consolidated invoice",
        "operationId": "055a3188507ec177aa99254792b3408c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "invoices": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "1000001"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Async request id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "example": "2d195c8a-7553-4fa2-82d8-0a9aa446c584"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/invoices?useCursorPagination=true": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get all available invoices",
        "description": "Shows invoices requests",
        "operationId": "65b6576240f485c6a3db46dd6eaf3ab4",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "useCursorPagination",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "example": "true"
            }
          },
          {
            "name": "_useNewFeature",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "example": "true"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "25"
            }
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search for invoice by several field, like policyNo, invoiceNo, Broker, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter paid or non-paid invices",
            "required": false,
            "schema": {
              "type": "string",
              "default": "not_paid",
              "enum": ["paid", "not_paid"]
            }
          },
          {
            "name": "broker",
            "in": "query",
            "description": "Filter partner-paid invices, made by specified broker",
            "required": false,
            "schema": {
              "type": "string",
              "example": "brokerName"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter customer-paid invoices, made by pecified customer",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "12345"
            }
          },
          {
            "name": "customer",
            "in": "query",
            "description": "Filter invices by specified customer`s policies",
            "required": false,
            "schema": {
              "type": "string",
              "example": "someCustomer"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Filter invices by specified currency",
            "required": false,
            "schema": {
              "type": "string",
              "example": "EUR"
            }
          },
          {
            "name": "includeFutureInvoices",
            "in": "query",
            "description": "Include future invoices",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "false",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/invoiceResponseListObject"
                          }
                        },
                        "links": {
                          "properties": {
                            "prev": {
                              "type": "string"
                            },
                            "next": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/invoices/select-from-file": {
      "post": {
        "tags": ["Invoices"],
        "summary": "Select invoices from file",
        "operationId": "35bc717aafa8a77b6d72de2fce21077c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "broker",
            "in": "query",
            "description": "Filter invoices made by specified broker (required when customerId is not present)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "brokerName"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter invoices made by specified customer (required when broker is not present)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "12345"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Filter invoices by specified currency",
            "required": true,
            "schema": {
              "type": "string",
              "example": "EUR"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "properties": {
                  "file": {
                    "description": "CSV file to import",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invoices data",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/msearch": {
      "get": {
        "tags": ["Search"],
        "summary": "Get multisearch results",
        "operationId": "08a129de456f999eccbde559fca136b9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "searchterm",
            "in": "query",
            "description": "search in the list providing the search term",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of multisearch"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokerpayments/detail/{id}": {
      "get": {
        "tags": ["Brokerpayments"],
        "summary": "Get payload from payments event by Id",
        "operationId": "cb9d191932e1ec20c38d108a2f4e6605",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return payments data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentOfBroker"
                    },
                    {
                      "$ref": "#/components/schemas/PaymentOfCustomer"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokerpayments/suggestion/{paymentId}": {
      "get": {
        "tags": ["Brokerpayments"],
        "summary": "Returns invoice suggested list by payment id",
        "operationId": "50c809c8bd7ef3f0abc23b8f2b82616c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns invoice suggested list by payment id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/suggested-invoice"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokerpayments-paginated": {
      "get": {
        "tags": ["Brokerpayments"],
        "summary": "Get paginated list of payments",
        "operationId": "a4bf60d1cdafefed9c9e95da15e12c02",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated payments",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/payments"
                      }
                    },
                    "first_page_url": {
                      "type": "string"
                    },
                    "from": {
                      "type": "integer"
                    },
                    "last_page": {
                      "type": "integer"
                    },
                    "last_page_url": {
                      "type": "string"
                    },
                    "next_page_url": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "prev_page_url": {
                      "type": "string"
                    },
                    "to": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokerpayments/{payer}": {
      "get": {
        "tags": ["Brokerpayments"],
        "summary": "list payments for payer (customer id or broker short name)",
        "operationId": "9bb76306282762750312f99484dc14ed",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "payer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/payments"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/brokerpayments/last-requested-period": {
      "get": {
        "tags": ["Brokerpayments"],
        "summary": "data with date and time of last requested period from bank",
        "operationId": "315437e21e352b74b9ca1d9c16e45f0f",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Last requested period from bank",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "string",
                      "example": "2022-06-27T11:12:34+03:00"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/debt-policies": {
      "get": {
        "tags": ["debt-policies"],
        "summary": "Return list of debt policies",
        "operationId": "725386a58c10f586fda7c98df071fcb3",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of debt policies",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/debt-policy-list-data"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/history": {
      "get": {
        "tags": ["Policy"],
        "summary": "list of policy changes",
        "operationId": "dbff1674fe444def38ba8bf8daa54a40",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A ist of policy changes",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/policyHistoryList"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/terminate/premiums": {
      "post": {
        "tags": ["Policy termination"],
        "summary": "Get termination return premium",
        "operationId": "afbba1d5a0a40d59f93fb5e79ed0d2de",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "terminationSum needed in case of 'manual' type, shortRatePct is needed in case of 'short-rate' type"
              },
              "example": {
                "policy": {
                  "terminationType": "pro-rata",
                  "terminationDate": "2023-05-05",
                  "terminationSum": 15,
                  "shortRatePct": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of policy changes",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/policy-termination-premium-response"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/terminate": {
      "post": {
        "tags": ["Policy termination"],
        "summary": "Terminate policy with manual premium",
        "operationId": "545bd30dda9d4a9ad5aacf4130706b9f",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/policy-terminate-request"
              },
              "examples": {
                "full-rollback-termination": {
                  "summary": "Termination with type full-rollback",
                  "value": {
                    "policy": {
                      "terminationType": "full-rollback",
                      "terminationReason": "Optional reason"
                    },
                    "financials": {
                      "adminFeeSum": 0
                    }
                  }
                },
                "manual-termination": {
                  "summary": "Termination with type manual",
                  "value": {
                    "policy": {
                      "terminationType": "manual",
                      "terminationDate": "2022-02-15",
                      "terminationReason": "Optional reason"
                    },
                    "financials": {
                      "adminFeeSum": 0
                    }
                  }
                },
                "pro-rata-termination": {
                  "summary": "Termination with type pro-rata",
                  "value": {
                    "policy": {
                      "terminationType": "pro-rata",
                      "terminationDate": "2022-02-15",
                      "terminationReason": "Optional reason"
                    },
                    "financials": {
                      "adminFeeSum": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "event_id": {
                      "type": "integer",
                      "example": "123"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/revert-termination": {
      "post": {
        "tags": ["Policy termination"],
        "summary": "Cancel termination and restore the policy",
        "operationId": "7c183d60535b938bd90465a429cdeb3e",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Termination has been successfully reverted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/renewal": {
      "get": {
        "tags": ["Policy"],
        "summary": "Preparing data before renewal quote create",
        "description": "Preparing data before renewal quote create",
        "operationId": "renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/product-json-schema-structure"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/claim-data": {
      "get": {
        "tags": ["Policy"],
        "summary": "Get data for creating claim FNOL",
        "operationId": "71fac3ca9c8b09a1f2bb5aef263b58ba",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "mapped data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "example": "111AAA - Audi A6"
                      },
                      "product": {
                        "type": "string",
                        "example": "casco"
                      },
                      "payload": {
                        "type": "object",
                        "example": "{}"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Claims feature not enabled for product"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/files": {
      "post": {
        "tags": ["Policy", "Documents"],
        "summary": "Upload files to policy",
        "operationId": "964aba9e6f1a5c1446e97e81b4cccad9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file[]": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of added documents",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "filename": {
                            "type": "string"
                          },
                          "mime": {
                            "type": "string"
                          },
                          "documentId": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/custom-view/installments": {
      "get": {
        "tags": ["Policy"],
        "summary": "Get policy custom view installments",
        "operationId": "b914aa3a4ba8a1019bad98e88dd7ee87",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          },
          {
            "name": "aggregated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "false",
              "example": "true"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Can\\'t find policy"
          },
          "200": {
            "description": "Created customer",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "header": {
                            "type": "string",
                            "example": "Installments"
                          },
                          "type": {
                            "type": "string",
                            "example": "installments"
                          },
                          "columns": {
                            "type": "object"
                          },
                          "rows": {
                            "type": "object"
                          },
                          "totals": {
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/issue": {
      "post": {
        "tags": ["Policy"],
        "summary": "issue policy",
        "operationId": "2f42918ba88a4350855c8464f19ed136",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Issues policy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy-root"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ResponseValidationError422"
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/issue/": {
      "patch": {
        "tags": ["Policy"],
        "summary": "issue mta for the policy",
        "operationId": "5ccf57bce1c8461e4f7972457928e0bb",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issues policy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy-root"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/versions/search": {
      "get": {
        "tags": ["Policy"],
        "summary": "Get valid version of policy by search terms filtered by date",
        "operationId": "87be99e35f6a5753065a17af241aa482",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "search_term",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-02-02T00:00"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "25"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get valid policy version",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "policy_id": {
                            "type": "int",
                            "example": "123456789"
                          },
                          "version": {
                            "type": "int",
                            "example": "1"
                          },
                          "schema_name": {
                            "type": "string",
                            "example": "1"
                          },
                          "date_effective": {
                            "type": "string",
                            "example": "2023-04-22T06:00:00Z"
                          },
                          "date_expiry": {
                            "type": "string",
                            "example": "2023-04-22T06:00:00Z"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}": {
      "get": {
        "tags": ["Policy"],
        "summary": "Get policy data",
        "operationId": "1712bd7a4c206a7f14560e65a4ec500c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          },
          {
            "name": "forceCoverageDateFormat",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "true",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Policy data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy-root"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/links": {
      "get": {
        "tags": ["Policy"],
        "summary": "Get policy data with links",
        "operationId": "4ffdbf0635403e978dc34e13d2b4722d",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          },
          {
            "name": "forceCoverageDateFormat",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "true",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Policy data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/policy-root"
                    },
                    "meta": {
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "version": {
                          "type": "integer",
                          "example": "10"
                        },
                        "schemaPath": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "links": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/schedule": {
      "get": {
        "tags": ["Policy"],
        "summary": "Return policy financial data",
        "operationId": "bb3f9cd66fb33ef67b5bc314d62cd004",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return policy financial data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/installments"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/invoices": {
      "get": {
        "tags": ["Policy"],
        "summary": "Return policy invoices data",
        "operationId": "35243db0ac82c8c7badc4124004307e4",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return policy invoices data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "invoicenumber": {
                            "type": "string",
                            "example": "100011517"
                          },
                          "duedate": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-02-01"
                          },
                          "premium": {
                            "type": "number",
                            "example": "65.89"
                          },
                          "adminfee": {
                            "type": "number",
                            "example": "55.23"
                          },
                          "mgacomm": {
                            "type": "number",
                            "example": "18.00"
                          },
                          "brokercomm": {
                            "type": "number",
                            "example": "1.01"
                          },
                          "payable": {
                            "type": "null",
                            "example": "null"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{id}/history/events": {
      "get": {
        "tags": ["Policy"],
        "summary": "Policy history in events",
        "operationId": "d56c4df208d01b065e259830f7b5a9e6",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[limit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "25"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return paginated list of policy events",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/policy-event"
                      }
                    },
                    "links": {
                      "properties": {
                        "prev": {
                          "type": "string",
                          "nullable": true
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/document-types": {
      "get": {
        "tags": ["Policy Documents"],
        "summary": "Return policy available document types, based on generated_documents config and payload",
        "operationId": "ed8acd7d6a74018d6591749d121bb9d7",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available document types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "quote"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/policies/{policyId}/generate-document/{type}": {
      "post": {
        "tags": ["Policy Documents"],
        "summary": "Generate policy document by selected type",
        "operationId": "f019f85bbb75d3eefef8513d774c730d",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "quote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated document in binary format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/regular/{name}": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a><br/><br/>\n     *          Get schema according to your rights, you can use <a href=https://rjsf-team.github.io/react-jsonschema-form/>React jsonschema form builder</a> to create payload for quote create",
        "operationId": "get-schema-regular",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of schema<br/>\n     *              `policy` - the main scheme for any product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of schema<br/>\n     *              `{product}` - the product name in case of type: `policy`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of product or other object, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/regular-renewal/{name}": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get renewal schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a><br/><br/>\n     *          Get schema according to your rights, you can use <a href=https://rjsf-team.github.io/react-jsonschema-form/>React jsonschema form builder</a> to create payload for quote create",
        "operationId": "get-schema-regular-renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of schema<br/>\n     *              `policy` - the main scheme for any product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of schema<br/>\n     *              `{product}` - the product name in case of type: `policy`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of product, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/regular-renewal/{name}/{version}/ui": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get renewal ui schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a><br/><br/>\n     *          Get schema according to your rights, you can use <a href=https://rjsf-team.github.io/react-jsonschema-form/>React jsonschema form builder</a> to create payload for quote create",
        "operationId": "get-ui-schema-regular-renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of schema<br/>\n     *              `policy` - the main scheme for any product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of schema<br/>\n     *              `{product}` - the product name in case of type: `policy`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UI schema of product, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/mta-renewal/{name}/{version}/scheme": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get renewal mta schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a><br/><br/>\n     *          Get schema according to your rights, you can use <a href=https://rjsf-team.github.io/react-jsonschema-form/>React jsonschema form builder</a> to create payload for quote create",
        "operationId": "get-schema-mta-renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of schema<br/>\n     *              `policy` - the main scheme for any product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of schema<br/>\n     *              `{product}` - the product name in case of type: `policy`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mta renewal schema of product, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/mta-renewal/{name}/{version}/ui": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get renewal mta ui schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a><br/><br/>\n     *          Get schema according to your rights, you can use <a href=https://rjsf-team.github.io/react-jsonschema-form/>React jsonschema form builder</a> to create payload for quote create",
        "operationId": "get-ui-schema-mta-renewal",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of schema<br/>\n     *              `policy` - the main scheme for any product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of schema<br/>\n     *              `{product}` - the product name in case of type: `policy`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mta renewal UI schema of product, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/action/{type}/scheme": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get schema structure for action schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a>",
        "operationId": "get-schema-action",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of action schema",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "request-information-email"
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of action, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/action/{type}/ui": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get UI for action schema",
        "description": "<a href=https://json-schema.org/learn/getting-started-step-by-step.html>Json schema specification.</a>",
        "operationId": "get-schema-action-ui",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of action schema",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "request-information-email"
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of action, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/regular/{name}/{version}/products": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get schema products",
        "description": "Get all schema products with their object types for given schema version",
        "operationId": "b316f219d03de9866836715c64b2ee76",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of schema",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "policy"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of schema",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of schema products with their object types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "product_name"
                      },
                      "title": {
                        "type": "string",
                        "example": "Product name"
                      },
                      "objectType": {
                        "type": "string",
                        "example": "object_type_name"
                      },
                      "objectTypeTitle": {
                        "type": "string",
                        "example": "Object type title"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/policy/object-types": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get object types",
        "description": "Returns available object types for policy schema",
        "operationId": "5170957cae180dc91164e2faf9e36434",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "objectType": {
                        "type": "string",
                        "example": "building"
                      },
                      "title": {
                        "type": "string",
                        "example": "Building"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/policy/products": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get products",
        "description": "Returns available products for object type in policy schema",
        "operationId": "75b5157c3f7efdf53811f79db362efd9",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "Object type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "product": {
                        "type": "string",
                        "example": "fire"
                      },
                      "title": {
                        "type": "string",
                        "example": "Fire damage"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/policy/insurers": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get insurers",
        "description": "Returns available insurers for product in policy schema",
        "operationId": "3c2ed2513a624e8fcd045a2b759b021b",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "Object type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productTag",
            "in": "query",
            "description": "Product tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "insurer": {
                        "type": "string",
                        "example": "lloyds"
                      },
                      "title": {
                        "type": "string",
                        "example": "Lloyds"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/policy/{policyId}/termination/scheme": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Policy termination json schema",
        "operationId": "5480868fb621899d976fee6351c26542",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Termination json schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/policy/{policyId}/termination/ui": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Policy termination ui json schema",
        "operationId": "111c7027f122b6ca935a8409e8869ad1",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Policy id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Termination ui json schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/policy-history-view/{name}/{version}/scheme": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get regular schema for displaying policy version",
        "operationId": "get-policy-history-view",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["policy", "policy-mta"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of product or other object, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/schemes/{type}/policy-history-view/{name}/{version}/ui": {
      "get": {
        "tags": ["Schemes"],
        "summary": "Get ui schema for displaying policy version",
        "operationId": "get-policy-history-view",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["policy", "policy-mta"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of product or other object, https://json-schema.org/",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/reinsurance/bdx": {
      "post": {
        "tags": ["Reinsurance report"],
        "summary": "Create reinsurance report for all policies",
        "operationId": "411eed05784a72085abceea171fba97c",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["reinsurer", "dueDate"],
                "properties": {
                  "reinsurer": {
                    "description": "reinsurer tag",
                    "type": "string",
                    "example": "munichRe"
                  },
                  "dueDate": {
                    "type": "date",
                    "example": "2020-01-01"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request accepted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invoice_no": {
                      "type": "string",
                      "example": "6d395bb4-f8b9-11ea-a877-0242ac170005"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/reinsurance/bdx/{invoice_no}/pay": {
      "post": {
        "tags": ["Reinsurance report"],
        "summary": "Pay generated reinsurance report",
        "operationId": "b9865ff6286995b3eb4dce768b4faca8",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "invoice_no",
            "in": "path",
            "description": "Invoice which will be paid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["paymentInvoiceNo", "paymentDate", "paymentSum"],
                "properties": {
                  "paymentInvoiceNo": {
                    "type": "string",
                    "example": "sr0001"
                  },
                  "paymentDate": {
                    "type": "date",
                    "example": "2020-01-01"
                  },
                  "paymentSum": {
                    "type": "numeric",
                    "example": "83.29"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request accepted"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/reinsurers": {
      "get": {
        "tags": ["Reinsurers"],
        "summary": "Get all available reinsurers",
        "operationId": "cc9a15b4561b8dccbb671ba962a45fe8",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search for reinsurers by tag",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reinsurers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "shortName": {
                        "type": "string",
                        "example": "munichRe"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/reports/broker-sales": {
      "get": {
        "tags": ["Reports broker sales"],
        "summary": "Return premium and commission information for period",
        "operationId": "ba3e8d9ddfc8039ccd679c3c4131f1b8",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "groupByMonth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return policy financial data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reports-broker-sales"
                      },
                      "property": "data"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reports-broker-sales-by-month"
                      },
                      "property": "data"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/reports/broker-sales-product": {
      "get": {
        "tags": ["Reports broker sales"],
        "summary": "Return premium information for period grouped by product",
        "operationId": "7af5b3b2ee6e501638969e93cad87d40",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return financial data for period",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reports-broker-sales-by-product"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "Empty response in case there is no data"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/requests/{requestId}": {
      "get": {
        "tags": ["QuoteIssueAsync"],
        "summary": "Async request status",
        "operationId": "get-quote-issue-status",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "request id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "longPolling",
            "in": "query",
            "required": false,
            "schema": {
              "type": "bool",
              "default": "false",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request status",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "description": "Request ID",
                      "type": "string",
                      "format": "uuid",
                      "example": "8bb0e40f-6841-47fc-a283-b6a43c6e299e"
                    },
                    "status": {
                      "description": "Status of running request",
                      "type": "string",
                      "example": "pending"
                    },
                    "data": {
                      "description": "Request data if complete",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "423": {
            "description": "Request still pending"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ledger/users/simple-list": {
      "get": {
        "tags": ["Users"],
        "summary": "Get simple users list of names and sub-s",
        "operationId": "fb8e02a8cde5872c6ac0c4e29aa04ec5",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-TENANT-ID"
          },
          {
            "name": "broker",
            "in": "query",
            "description": "Get users, which have this broker",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Test Broker"
            }
          },
          {
            "name": "userSub",
            "in": "query",
            "description": "User with this sub will be added to the response",
            "required": false,
            "schema": {
              "type": "string",
              "example": "9409b930-6023-42be-b745-abcdef724358"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "User name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Test name"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "User group",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Underwriter"
            }
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "User group",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user names / user subs (AWS cognito property)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "value": {
                        "type": "string",
                        "example": "9409a930-6094-42be-b719-abcdef123456"
                      },
                      "label": {
                        "type": "string",
                        "example": "Some User"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "endorsement-list-object": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "documents": {
            "$ref": "#/components/schemas/documentsList"
          },
          "description": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "translatable": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Survey Clause"
                },
                "description": {
                  "type": "string",
                  "example": "Cover hereon."
                },
                "documents": {
                  "$ref": "#/components/schemas/documentsList"
                },
                "lang": {
                  "type": "string",
                  "example": "en"
                }
              },
              "type": "object"
            }
          },
          "referral": {
            "type": "bool"
          },
          "removable": {
            "type": "bool"
          },
          "editable": {
            "type": "bool"
          },
          "active": {
            "type": "bool"
          },
          "user": {
            "type": "string"
          },
          "custom_fields": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "endorsement-view-object": {
        "properties": {
          "id": {
            "type": "string"
          },
          "translatable": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Survey Clause"
                },
                "description": {
                  "type": "string",
                  "example": "Cover hereon."
                },
                "documents": {
                  "$ref": "#/components/schemas/documentsList"
                },
                "lang": {
                  "type": "string",
                  "example": "en"
                }
              },
              "type": "object"
            }
          },
          "referral": {
            "type": "bool"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removable": {
            "type": "bool"
          },
          "editable": {
            "type": "bool"
          },
          "is_default": {
            "type": "bool"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "metaMessage": {
        "required": ["code", "title"],
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "metaError": {
        "properties": {
          "errors": {
            "description": "Error that can't be overcomed/retried in most of the cases. Connection time-out to integration, connection fail.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/metaMessage"
            }
          }
        },
        "type": "object"
      },
      "metaWarning": {
        "properties": {
          "warnings": {
            "description": "Error that can be handled manually by inserting data manually, edit the data, retry. Not blocking the flow. Vehicle make and model not found, insert it manually.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/metaMessage"
            }
          }
        },
        "type": "object"
      },
      "binderResponseItemObject": {
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "payload": {
            "$ref": "#/components/schemas/binderObject"
          }
        },
        "type": "object"
      },
      "binderResponseListObject": {
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Test EU Binder"
          },
          "umr": {
            "type": "string",
            "example": "Test EU Binder UMR"
          },
          "underwriter": {
            "type": "string",
            "example": "Test EU Binder underwriter"
          },
          "startDate": {
            "type": "string",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "example": "2022-21-31"
          },
          "product": {
            "type": "string",
            "example": "taxproduct"
          },
          "status": {
            "type": "string",
            "example": "active"
          }
        },
        "type": "object"
      },
      "binderResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "payload": {
            "$ref": "#/components/schemas/binderObject"
          }
        },
        "type": "object"
      },
      "reports-broker-quote-sales": {
        "properties": {
          "createdCount": {
            "type": "number",
            "format": "integer"
          },
          "issuedCount": {
            "type": "number",
            "format": "integer"
          },
          "issueRatio": {
            "type": "number",
            "format": "decimal"
          }
        },
        "type": "object"
      },
      "reports-broker-quote-sales-by-month": {
        "properties": {
          "createdCount": {
            "type": "number",
            "format": "integer"
          },
          "issuedCount": {
            "type": "number",
            "format": "integer"
          },
          "issueRatio": {
            "type": "number",
            "format": "decimal"
          },
          "year": {
            "type": "int"
          },
          "month": {
            "type": "int"
          }
        },
        "type": "object"
      },
      "autocompletedIrelandAddress": {
        "properties": {
          "addressId": {
            "description": "Unique Ireland address ID",
            "type": "number",
            "example": "1200002028"
          },
          "addressString": {
            "description": "Full address",
            "type": "string",
            "example": "Wyattville Road, Ballybrack, Co. Dublin"
          }
        },
        "type": "object"
      },
      "fullIrelandAddress": {
        "properties": {
          "county": {
            "type": "string",
            "example": "Kildare"
          },
          "dublin_postal_area": {
            "type": "string",
            "example": "Dublin 11"
          },
          "post_town": {
            "type": "string",
            "example": "Dublin"
          },
          "town": {
            "type": "string",
            "example": "Dublin"
          },
          "city": {
            "type": "string",
            "example": "Maynooth"
          },
          "locality": {
            "type": "string",
            "example": "Glenageary"
          },
          "village": {
            "type": "string",
            "example": "Corofin"
          },
          "thoroughfare": {
            "type": "string",
            "example": "Woodlands Road"
          },
          "building_group": {
            "type": "string",
            "example": "Ireland Building Group"
          },
          "building_number": {
            "type": "string",
            "example": "6"
          },
          "eircode": {
            "type": "string",
            "example": "D11 KC81"
          },
          "urban_area": {
            "type": "string",
            "example": "Waterford"
          },
          "rural_locality": {
            "type": "string",
            "example": "Corofin"
          },
          "longitude": {
            "type": "string",
            "example": "-6.588577"
          },
          "latitude": {
            "type": "string",
            "example": "53.36569"
          }
        },
        "type": "object"
      },
      "binderObject": {
        "properties": {
          "summary": {
            "properties": {
              "name": {
                "type": "string",
                "example": "Test Binder"
              },
              "description": {
                "type": "string",
                "example": "Test EU Binder description"
              },
              "umr": {
                "type": "string",
                "example": "Test EU Binder UMR"
              },
              "group": {
                "type": "string",
                "example": "Some Binders group"
              },
              "underwriter": {
                "type": "string",
                "example": "Test EU Binder underwriter"
              }
            },
            "type": "object"
          },
          "contractDetails": {
            "properties": {
              "startDate": {
                "type": "string",
                "example": "2022-01-01"
              },
              "endDate": {
                "type": "string",
                "example": "2022-02-01"
              },
              "product": {
                "type": "string",
                "example": "insurer-warranty"
              },
              "status": {
                "type": "string",
                "example": "active"
              }
            },
            "type": "object"
          },
          "shares": {
            "type": "array",
            "items": {
              "properties": {
                "objectType": {
                  "type": "string",
                  "example": "vehicle"
                },
                "risk": {
                  "type": "string",
                  "example": "theft"
                },
                "insurers": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "insurer": {
                        "type": "string",
                        "example": "lloyds"
                      },
                      "isLead": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "grossCommPct": {
                        "type": "number",
                        "example": "20.25"
                      },
                      "premiumSharePct": {
                        "type": "number",
                        "example": "100"
                      },
                      "allowCommSacrifice": {
                        "type": "boolean",
                        "example": "false"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            }
          },
          "limitations": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "properties": {
                  "path": {
                    "type": "string",
                    "example": "$.policy.country"
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "example": "Germany"
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "documentType": {
                        "type": "string",
                        "example": "other"
                      },
                      "fileUpload": {
                        "type": "boolean",
                        "example": "false"
                      },
                      "file": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "mime": {
                              "type": "string",
                              "example": "image/jpeg"
                            },
                            "filename": {
                              "type": "string",
                              "example": "cat picture.jpg"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2022-04-12"
                            },
                            "documentId": {
                              "type": "integer",
                              "example": "1162"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            }
          },
          "binderAutoselect": {
            "properties": {
              "priority": {
                "type": "float",
                "example": "1.2"
              }
            },
            "type": "object"
          },
          "schema": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "binder"
                },
                "type": {
                  "type": "boolean",
                  "example": "binder"
                },
                "version": {
                  "type": "number",
                  "example": "11"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "quoteChangesList": {
        "properties": {
          "target": {
            "description": "Dot notated path to specific quote attribute",
            "type": "string",
            "example": "objects.insuredItem.1.data.dateOfBirth"
          },
          "status": {
            "description": "Was the property changed, added or deleted",
            "type": "string",
            "enum": ["replace", "add", "remove"]
          },
          "previous": {
            "description": "Used for status `replace` only, shows previous attribute value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "quote-event": {
        "properties": {
          "eventId": {
            "type": "integer"
          },
          "eventTag": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "entryDate": {
            "type": "string"
          },
          "eventUser": {
            "type": "string"
          },
          "isFullPayload": {
            "type": "boolean"
          },
          "payload": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/history-event-value"
                },
                {
                  "$ref": "#/components/schemas/history-event-patch"
                }
              ]
            }
          }
        },
        "type": "object"
      },
      "binderLinks": {
        "properties": {
          "binder:renew": {
            "type": "string",
            "example": "http://ledger.test/api/v1/ledger/sales/binders/1/renew"
          }
        },
        "type": "object"
      },
      "featureListItem": {
        "properties": {
          "id": {
            "type": "string",
            "example": "feature_id"
          },
          "type": {
            "type": "string",
            "example": "Feature Title"
          },
          "description": {
            "type": "string",
            "example": "Feature description"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "editable": {
            "description": "Whether feature can be edited from UI",
            "type": "boolean",
            "example": false
          },
          "withSchema": {
            "description": "Whether feature has json schema",
            "type": "boolean",
            "example": false
          }
        },
        "type": "object"
      },
      "quoteLinks": {
        "properties": {
          "quote:changes": {
            "type": "string",
            "example": "https://app.beta.insly.training/api/v1/ledger/sales/policies/1/changes"
          }
        },
        "type": "object"
      },
      "insurer-payments-report": {
        "properties": {
          "policy_id": {
            "type": "number"
          },
          "policyHolder": {
            "type": "string"
          },
          "policyNo": {
            "type": "string"
          },
          "broker": {
            "type": "string"
          },
          "premium": {
            "type": "number"
          },
          "BrokerCommPct": {
            "type": "number"
          },
          "BrokerComm": {
            "type": "number"
          },
          "carrierNet": {
            "type": "number"
          },
          "mgaCommPct": {
            "type": "number"
          },
          "mgaComm": {
            "type": "number"
          },
          "Effectivedate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "history-event-patch": {
        "title": "Patch attribute",
        "description": "A list of changes between two events payloads, provided in format close to Json Patch standard",
        "properties": {
          "title": {
            "type": "string"
          },
          "patch": {
            "type": "array",
            "items": {
              "properties": {
                "op": {
                  "type": "string",
                  "enum": ["add", "replace", "remove"]
                },
                "path": {
                  "type": "string",
                  "example": "objects.building.1"
                },
                "value": {
                  "description": "New value - in case of add or replace; old value - in case of remove. Arrays and objects are encoded to json string",
                  "type": "string"
                },
                "previous": {
                  "description": "Old value in case of replace. Arrays and objects are encoded to json string",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "history-event-value": {
        "title": "Value attribute",
        "description": "Represents an information unit related to history event",
        "properties": {
          "title": {
            "type": "string"
          },
          "type": {
            "description": "Type hint for UI to format value",
            "type": "string",
            "enum": ["string", "number", "date", "datetime", "currency"]
          },
          "value": {},
          "path": {
            "description": "Path to value inside event payload",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentOfCustomer": {
        "properties": {
          "data": {
            "properties": {
              "customerId": {
                "type": "integer"
              },
              "paymentSum": {
                "type": "integer",
                "format": "decimal"
              },
              "description": {
                "type": "string"
              },
              "paymentDate": {
                "type": "string",
                "format": "date"
              },
              "paymentType": {
                "type": "string"
              },
              "paymentCurrency": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PaymentOfBroker": {
        "properties": {
          "data": {
            "properties": {
              "broker": {
                "properties": {
                  "shortName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "paymentSum": {
                "type": "integer",
                "format": "decimal"
              },
              "description": {
                "type": "string"
              },
              "paymentDate": {
                "type": "string",
                "format": "date"
              },
              "paymentType": {
                "type": "string"
              },
              "paymentCurrency": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "broker": {
        "properties": {
          "shortName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "suggested-invoice-paymentUpdate": {
        "properties": {
          "payerType": {
            "type": "string"
          },
          "customerId": {
            "type": "number"
          },
          "broker": {
            "$ref": "#/components/schemas/broker"
          }
        },
        "type": "object"
      },
      "suggested-invoice-invoiceData": {
        "properties": {
          "invoiceNo": {
            "type": "string"
          },
          "payerType": {
            "type": "string"
          },
          "customerId": {
            "type": "number"
          },
          "policyNo": {
            "type": "string"
          },
          "entryDate": {
            "type": "date"
          },
          "dueDate": {
            "type": "date"
          },
          "customerName": {
            "type": "string"
          },
          "invoiceSum": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "brokerShortName": {
            "type": "string"
          },
          "policyId": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "suggested-invoice": {
        "properties": {
          "paymentUpdate": {
            "$ref": "#/components/schemas/suggested-invoice-paymentUpdate"
          },
          "invoiceData": {
            "$ref": "#/components/schemas/suggested-invoice-invoiceData"
          }
        },
        "type": "object"
      },
      "debt-policy-list-data": {
        "properties": {
          "policyId": {
            "type": "number"
          },
          "issuer": {
            "type": "string"
          },
          "brokerName": {
            "type": "string"
          },
          "brokerShortName": {
            "type": "string"
          },
          "policyNo": {
            "type": "string"
          },
          "dateIssued": {
            "type": "date"
          },
          "dateExpiry": {
            "type": "date"
          },
          "dateInception": {
            "type": "date"
          },
          "currency": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "objects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerCode": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "overdueSum": {
            "type": "number"
          },
          "overdueDays": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "policy-termination-premium-response": {
        "type": "object",
        "allOf": [
          {
            "properties": {
              "policy": {
                "properties": {
                  "terminationType": {
                    "type": "string",
                    "enum": ["pro-rata"]
                  }
                },
                "type": "object"
              }
            }
          },
          {
            "$ref": "#/components/schemas/policy-termination"
          },
          {
            "$ref": "#/components/schemas/policy-objects-termination"
          }
        ]
      },
      "policy-termination": {
        "properties": {
          "policy": {
            "properties": {
              "terminationType": {
                "type": "string"
              },
              "financials": {
                "$ref": "#/components/schemas/financials-policy"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "policy-objects-termination": {
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "products": {
                  "properties": {
                    "{productTag}": {
                      "properties": {
                        "financials": {
                          "$ref": "#/components/schemas/object-termination-financials"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "policy-terminate-request": {
        "oneOf": [
          {
            "type": "object",
            "allOf": [
              {
                "properties": {
                  "policy": {
                    "properties": {
                      "terminationType": {
                        "type": "string",
                        "enum": ["manual"]
                      },
                      "terminationDate": {
                        "type": "string",
                        "format": "date"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/policy-termination"
              },
              {
                "$ref": "#/components/schemas/policy-objects-termination"
              }
            ]
          },
          {
            "type": "object",
            "allOf": [
              {
                "properties": {
                  "policy": {
                    "properties": {
                      "terminationType": {
                        "type": "string",
                        "enum": ["pro-rata"]
                      },
                      "terminationDate": {
                        "type": "string",
                        "format": "date"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/policy-termination"
              }
            ]
          },
          {
            "type": "object",
            "allOf": [
              {
                "properties": {
                  "policy": {
                    "properties": {
                      "terminationType": {
                        "type": "string",
                        "enum": ["full-rollback"]
                      }
                    },
                    "type": "object"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/policy-termination"
              }
            ]
          }
        ]
      },
      "ValidationError422": {
        "properties": {
          "message": {
            "type": "string",
            "example": "The given data was invalid."
          },
          "errors": {
            "type": "object"
          }
        },
        "type": "object",
        "example": {
          "message": "The given data was invalid.",
          "errors": {
            "schema.type": ["The schema.type field is required."],
            "schema.name": ["The schema.name field is required."],
            "policy.dateInception": [
              "The policy.date inception is not a valid date."
            ]
          }
        }
      },
      "ServerError": {
        "properties": {
          "message": {
            "type": "string",
            "example": "Server Error"
          }
        },
        "type": "object"
      },
      "consolidatedInvoiceInvoiceResponseListObject": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/invoiceResponseListObject"
          },
          "links": {
            "properties": {
              "consolidated-invoices:invoices:add": {
                "type": "string"
              },
              "consolidated-invoices:invoices:remove": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "canCredit": {
                "type": "boolean",
                "example": false
              }
            },
            "type": "object"
          },
          "invoiceNo": {
            "type": "string",
            "example": "10000258"
          }
        },
        "type": "object"
      },
      "consolidatedInvoiceListResource": {
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "invoiceNo": {
            "type": "string",
            "example": "10001"
          },
          "invoicesCount": {
            "type": "int",
            "example": "1"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-01-01"
          },
          "dueDate": {
            "type": "date",
            "example": "2022-01-20"
          },
          "isOverdue": {
            "type": "boolean",
            "example": false
          },
          "brokerShortName": {
            "type": "string",
            "example": "broker1"
          },
          "premium": {
            "type": "float",
            "example": "110.10"
          },
          "commission": {
            "type": "float",
            "example": "10"
          },
          "totalReceivable": {
            "type": "float",
            "example": "100.10"
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "status": {
            "type": "string",
            "example": "draft"
          }
        },
        "type": "object"
      },
      "consolidatedInvoiceResource": {
        "required": ["brokerShortName", "currency", "periodEndDate"],
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": "1"
          },
          "invoiceNo": {
            "type": "string",
            "readOnly": true,
            "example": "10001"
          },
          "brokerShortName": {
            "type": "string",
            "example": "broker1"
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "periodStartDate": {
            "type": "date",
            "readOnly": true,
            "example": "2022-01-01"
          },
          "periodEndDate": {
            "type": "date",
            "example": "2022-01-16"
          },
          "dueDate": {
            "type": "date",
            "readOnly": true,
            "example": "2022-01-20"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "example": "draft"
          },
          "totalReceivable": {
            "type": "float",
            "readOnly": true,
            "example": "100.10"
          },
          "invoicesCount": {
            "type": "int",
            "readOnly": true,
            "example": "1"
          }
        },
        "type": "object"
      },
      "consolidatedInvoiceResourceLinks": {
        "properties": {
          "consolidated-invoices:added-invoices:list": {
            "type": "string"
          },
          "consolidated-invoices:available-invoices:list": {
            "type": "string"
          },
          "consolidated-invoices:issue": {
            "type": "string"
          },
          "consolidated-invoices:delete": {
            "type": "string"
          },
          "consolidated-invoices:documents:list": {
            "type": "string"
          },
          "consolidated-invoices:credit": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "documentResource": {
        "properties": {
          "fileUpload": {
            "type": "boolean",
            "example": false
          },
          "documentType": {
            "type": "string",
            "example": "other"
          },
          "file": {
            "properties": {
              "filename": {
                "type": "string",
                "example": "Document.pdf"
              },
              "mime": {
                "type": "string",
                "example": "application/pdf"
              },
              "documentId": {
                "type": "integer",
                "example": 1
              },
              "createdAt": {
                "type": "string",
                "example": "2022-01-01"
              },
              "content": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "documentsList": {
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentResource"
            }
          }
        },
        "type": "object"
      },
      "invoiceResponseListObject": {
        "properties": {
          "invoiceNo": {
            "type": "string",
            "example": "10000258"
          },
          "payer": {
            "type": "string",
            "example": "partner"
          },
          "policyNo": {
            "type": "number",
            "example": "334"
          },
          "createdDate": {
            "type": "string",
            "format": "date"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "customerName": {
            "type": "string",
            "example": "John Doe jr"
          },
          "customerId": {
            "type": "string",
            "example": "534329"
          },
          "premium": {
            "type": "number",
            "example": "65.89"
          },
          "commission": {
            "type": "number",
            "example": "10"
          },
          "invoiceSum": {
            "type": "number",
            "example": "55.89"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "paidAmount": {
            "type": "number",
            "example": "55.89"
          },
          "broker": {
            "type": "string",
            "example": "some broker"
          },
          "policyId": {
            "type": "number",
            "example": "56"
          },
          "allocationEventId": {
            "type": "number",
            "example": "331"
          },
          "isPaid": {
            "type": "boolean",
            "example": "true"
          },
          "documentId": {
            "type": "number",
            "example": 123
          },
          "paymentDate": {
            "type": "string",
            "format": "date"
          },
          "canCredit": {
            "type": "boolean",
            "example": "true"
          }
        },
        "type": "object"
      },
      "payments": {
        "properties": {
          "entry_date": {
            "type": "string",
            "format": "date"
          },
          "paymentReceivedDate": {
            "type": "string",
            "format": "date"
          },
          "paymentSum": {
            "type": "number"
          },
          "paymentCurrency": {
            "type": "string"
          },
          "payer": {
            "description": "customer id or broker name",
            "type": "string"
          },
          "broker": {
            "description": "broker name",
            "type": "string",
            "deprecated": true
          },
          "description": {
            "description": "payment description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "reports-broker-sales": {
        "properties": {
          "periodPremium": {
            "type": "number",
            "format": "decimal"
          },
          "periodAveragePremium": {
            "type": "number",
            "format": "decimal"
          },
          "periodBrokerCommission": {
            "type": "number",
            "format": "decimal"
          },
          "currency": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reports-broker-sales-by-month": {
        "properties": {
          "periodPremium": {
            "type": "number",
            "format": "decimal"
          },
          "periodAveragePremium": {
            "type": "number",
            "format": "decimal"
          },
          "periodBrokerCommission": {
            "type": "number",
            "format": "decimal"
          },
          "currency": {
            "type": "string"
          },
          "year": {
            "type": "int"
          },
          "month": {
            "type": "int"
          }
        },
        "type": "object"
      },
      "reports-broker-sales-by-product": {
        "properties": {
          "periodPremium": {
            "type": "number",
            "format": "decimal"
          },
          "currency": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "month": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "customerNote": {
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "user": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-12-20 17:32:01"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "customer": {
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/params"
          }
        },
        "type": "object"
      },
      "agent": {
        "properties": {
          "broker": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/params"
          }
        },
        "type": "object"
      },
      "object": {
        "properties": {
          "objectId": {
            "$ref": "#/components/schemas/objectData"
          }
        },
        "type": "object"
      },
      "objectData": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object-data"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object-products"
            }
          }
        },
        "type": "object"
      },
      "object-products": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object-products-data"
            }
          },
          "financials": {
            "$ref": "#/components/schemas/object-financials"
          }
        },
        "type": "object"
      },
      "object-data": {
        "properties": {
          "name": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/params"
          }
        },
        "type": "object"
      },
      "policy-root": {
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/policy"
          },
          "customer": {
            "$ref": "#/components/schemas/customer"
          },
          "agent": {
            "$ref": "#/components/schemas/agent"
          },
          "objects": {
            "$ref": "#/components/schemas/object"
          }
        },
        "type": "object"
      },
      "object-financials": {
        "properties": {
          "premium": {
            "type": "number"
          },
          "premiumIptPcs": {
            "type": "number"
          },
          "insurers": {
            "$ref": "#/components/schemas/object-financials-carriers"
          },
          "reinsurance": {
            "$ref": "#/components/schemas/object-financials-reinsurance"
          }
        },
        "type": "object"
      },
      "object-termination-financials": {
        "properties": {
          "premium": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "object-financials-carriers": {
        "properties": {
          "carrierTagX": {
            "$ref": "#/components/schemas/object-financials-carrier"
          }
        },
        "type": "object"
      },
      "object-financials-carrier": {
        "properties": {
          "commPct": {
            "type": "string"
          },
          "claimShare": {
            "type": "string"
          },
          "grossCommPct": {
            "type": "string"
          },
          "share": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "object-products-data": {
        "properties": {
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameLong": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/params"
          }
        },
        "type": "object"
      },
      "policy": {
        "properties": {
          "id": {
            "type": "integer",
            "example": "1234"
          },
          "policyNo": {
            "type": "string"
          },
          "dateIssue": {
            "type": "string",
            "format": "date"
          },
          "dateInception": {
            "type": "string",
            "format": "date"
          },
          "dateExpiry": {
            "type": "string",
            "format": "date"
          },
          "financials": {
            "$ref": "#/components/schemas/financials-policy"
          },
          "params": {
            "$ref": "#/components/schemas/params"
          }
        },
        "type": "object"
      },
      "financials-policy": {
        "properties": {
          "installments": {
            "type": "number"
          },
          "adminFeeSum": {
            "type": "number"
          },
          "feeVatPct": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "params": {
        "properties": {
          "attribute1": {
            "type": "string"
          },
          "attribute2": {
            "type": "string"
          },
          "attribute...": {
            "type": "string"
          },
          "attribute45": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "installments": {
        "properties": {
          "instId": {
            "type": "string"
          },
          "dueDate": {
            "type": "date"
          },
          "object": {
            "type": "string"
          },
          "carrier": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "premium": {
            "type": "number",
            "format": "decimal"
          },
          "adminFee": {
            "type": "number",
            "format": "decimal"
          },
          "ipt": {
            "type": "number",
            "format": "decimal"
          },
          "carrierNet": {
            "type": "number",
            "format": "decimal"
          },
          "mgaComm": {
            "type": "number",
            "format": "decimal"
          },
          "brokerComm": {
            "type": "number",
            "format": "decimal"
          }
        },
        "type": "object"
      },
      "object-financials-reinsurance": {
        "properties": {
          "quotaSharePct": {
            "type": "number"
          },
          "insurers": {
            "$ref": "#/components/schemas/object-financials-reinsurance-carriers"
          }
        },
        "type": "object"
      },
      "object-financials-reinsurance-carriers": {
        "properties": {
          "carrierTagX": {
            "$ref": "#/components/schemas/object-financials-reinsurance-carrier"
          }
        },
        "type": "object"
      },
      "object-financials-reinsurance-carrier": {
        "properties": {
          "premiumSharePct": {
            "type": "number"
          },
          "commPct": {
            "type": "number"
          },
          "claimSharePct": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "policyHistoryList": {
        "properties": {
          "entryDate": {
            "type": "string",
            "format": "date"
          },
          "event": {
            "type": "string"
          },
          "param": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "oldValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "customer-event": {
        "properties": {
          "eventId": {
            "type": "integer"
          },
          "eventTag": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "entryDate": {
            "type": "string",
            "format": "date"
          },
          "eventUser": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/history-event-value"
                },
                {
                  "$ref": "#/components/schemas/history-event-patch"
                }
              ]
            }
          }
        },
        "type": "object"
      },
      "policy-event": {
        "properties": {
          "event": {
            "type": "string"
          },
          "entryDate": {
            "type": "string",
            "format": "date"
          },
          "eventUser": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/history-event-value"
                },
                {
                  "$ref": "#/components/schemas/history-event-patch"
                }
              ]
            }
          }
        },
        "type": "object"
      }
    },
    "responses": {
      "ResponseValidationError422": {
        "description": "Validation errors.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError422"
            }
          }
        }
      },
      "500": {
        "description": "Unexpected server error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServerError"
            }
          }
        }
      },
      "product-json-schema-structure": {
        "description": "Full request structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
        "content": {
          "application/json": {
            "schema": {},
            "example": ["See response description for more details."]
          }
        },
        "links": {
          "waitActions": {
            "$ref": "#/components/links/waitActions"
          }
        }
      }
    },
    "parameters": {
      "X-TENANT-ID": {
        "name": "X-TENANT-ID",
        "in": "header",
        "description": "Tenant tag",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Accept-Language": {
        "name": "Accept-Language",
        "in": "header",
        "description": "Chosen language",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "product-json-schema": {
        "description": "Full request structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
        "content": {
          "application/json": {
            "schema": {},
            "example": ["See request description for more details."]
          }
        }
      },
      "product-json-schema-quote-create": {
        "description": "Full request structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
        "content": {
          "application/json": {
            "schema": {},
            "examples": {
              "basic-json-sctructure-description": {
                "summary": "See description for more details.",
                "value": ["See request description for more details."]
              },
              "quote-create": {
                "summary": "Minimum required data for quote creation. Quote id in the response.",
                "value": {
                  "schema": {
                    "name": "{name of the insurance product}",
                    "type": "policy"
                  }
                }
              }
            }
          }
        }
      },
      "product-json-schema-issue": {
        "description": "Optional. Otherwise full request structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
        "content": {
          "application/json": {
            "schema": {},
            "example": ["See request description for more details."]
          }
        }
      },
      "product-json-schema-update": {
        "description": "Full request structure per product can be taken from json scheme <a href=#/Schemes/get-schema-regular>Product json scheme.</a> with type: `policy` and name: `{name of the insurance product}`.",
        "content": {
          "application/json": {
            "schema": {},
            "examples": {
              "partial-policy-update": {
                "summary": "Partial data update is supported.",
                "value": {
                  "policy": {
                    "dateInception": "2022-05-25",
                    "dateExpiry": "2022-05-24"
                  }
                }
              },
              "partial-existing-object-block-update": {
                "summary": "In case of `objects` block to update object, need to provide `id`.",
                "value": {
                  "objects": {
                    "{objectType}": [
                      {
                        "data": {
                          "name": "New object name"
                        },
                        "id": "628b76552a696"
                      }
                    ]
                  }
                }
              },
              "property-removing": {
                "summary": "Regular field removing (not objects block)",
                "value": {
                  "policy": {
                    "dateExpiry": null
                  }
                }
              },
              "object-removing": {
                "summary": "Remove object",
                "value": {
                  "objects": {
                    "{objectType}": [
                      {
                        "id": "62f8bf71b98d8",
                        "data": null
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "Login with email and password to get the authentication token",
        "name": "Token based Auth",
        "in": "header",
        "bearerFormat": "JWT",
        "scheme": "bearer"
      }
    },
    "links": {
      "waitActions": {
        "operationId": "get-quote-actions",
        "parameters": {
          "id": "$response.body#/policy/id"
        },
        "description": "Call <a href=#/Quote/get-quote-actions>get-quote-actions</a> after with links example."
      },
      "get-quote-issue-status": {
        "operationId": "get-quote-issue-status",
        "parameters": {
          "requestId": "$response.body#/requestId"
        },
        "description": "Call <a href=#/QuoteIssueAsync/get-quote-issue-status>get-quote-issue-status</a> after with links example."
      }
    }
  }
}
